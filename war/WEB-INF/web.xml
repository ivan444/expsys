<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
              http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
         version="2.5"
         xmlns="http://java.sun.com/xml/ns/javaee">

	<!-- Spring config -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/applicationContext.xml</param-value>
	</context-param>
	
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- Servlets -->
<!--	 Spring MVC DispatcherServlet -->
	<servlet>
		<servlet-name>spring</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>


<!--	Redirectamo sve *.rpc zahtjeve na spring Dispatcher.
		On je konfiguriran u spring-servlet.xml (na servlet-name se dodaje -servlet.xml)
		U greetServlet primjeru (to dodje s GWT-om) requesti se mapiraju direktno na klasu,
		tj servlet je klasa (u ovom primjeru to je GreetingServiceImpl).
		Mi prvo mapiramo na spring controller koji onda dispatcha dalje na klase (vidi spring-servlet.xml)  
-->
	<servlet-mapping>
		<servlet-name>spring</servlet-name>
		<url-pattern>*.rpc</url-pattern>
	</servlet-mapping>

	<!-- Default page to serve -->
	<welcome-file-list>
		<welcome-file>expsys.html</welcome-file>
	</welcome-file-list>

</web-app>
